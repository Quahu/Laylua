using System;

namespace Laylua.Moon;

internal static partial class LayluaNative
{
    private static ReadOnlySpan<byte> PanicAsmBytes => new byte[]
    {
        0x58, // pop rax
        0x48, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // mov rax,ptr
        0x50, // push rax
        0xFF, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // jmp ptr
        0xFF, 0x20 // jmp qword ptr [rax]
    };

    private static ReadOnlySpan<byte> ManagedPanicAsmBytes => new byte[]
    {
        0x48, 0x83, 0xEC, 0x48, // sub rsp,48
        0x48, 0x89, 0x4C, 0x24, 0x20, // mov [rsp+20],rcx
        0x48, 0x89, 0x7C, 0x24, 0x28, // mov [rsp+28],rdi
        0x48, 0x89, 0x74, 0x24, 0x38, // mov [rsp+38],rsi
        // 0x48, 0xBA, 0xE4, 0x32, 0x60, 0x4D, 0xFB, 0x7F, 0x00, 0x00, // mov rdx,ptr
        // 0x48, 0x8B, 0xF2, // mov rsi,rdx
        0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0xA0, 0xD7, 0x91, 0x4D, 0xFB, 0x7F, 0x00, 0x00, // call ptr
        0x48, 0x8B, 0x4C, 0x24, 0x20, // mov rcx,[rsp+20]
        0x48, 0x8B, 0x7C, 0x24, 0x28, // mov rdi,[rsp+28]
        0x48, 0x89, 0x44, 0x24, 0x30, // mov [rsp+30],rax
        0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0xA8, 0xD7, 0x91, 0x4D, 0xFB, 0x7F, 0x00, 0x00, // call ptr
        0x48, 0x8B, 0x4C, 0x24, 0x20, // mov rcx,[rsp+20]
        0x48, 0x8B, 0x7C, 0x24, 0x28, // mov rdi,[rsp+28]
        0x48, 0x83, 0xF8, 0x00, // cmp rax,00
        0x74, 0x02, // je
        0xFF, 0xD0, // call rax
        0x48, 0x8B, 0x44, 0x24, 0x30, // mov rax,[rsp+30]
        0x48, 0x8B, 0x74, 0x24, 0x38, // mov rsi,[rsp+38]
        0x48, 0x83, 0xC4, 0x48, // add rsp,48
        0xC3 // ret
    };

    private static ReadOnlySpan<byte> HookAsmBytes => new byte[]
    {
        0x54, // push rsp
        0x53, // push rbx
        0x51, // push rcx
        0x52, // push rdx
        0x56, // push rsi
        0x57, // push rdi
        0x55, // push rbp
        0x41, 0x50, // push r8
        0x41, 0x51, // push r9
        0x41, 0x52, // push r10
        0x41, 0x53, // push r11
        0x41, 0x54, // push r12
        0x41, 0x55, // push r13
        0x41, 0x56, // push r14
        0x41, 0x57, // push r15

        0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0x84, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0x8C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0x94, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0x9C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0xA4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0xAC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0xB4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x0F, 0x7F, 0xBC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0x84, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0x8C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0x94, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0x9C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0xA4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0xAC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0xB4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xEC, 0x10, 0xF3, 0x44, 0x0F, 0x7F, 0xBC, 0x24, 0x00, 0x00, 0x00, 0x00,

        0x48, 0x83, 0xEC, 0x20, // sub rsp,50 { 80 }
        0x48, 0xBA, 0x00, 0x00, 0xAC, 0x71, 0x7F, 0x02, 0x00, 0x00, // mov rdx,ptr
        0x48, 0xBE, 0x00, 0x00, 0xAC, 0x71, 0x7F, 0x02, 0x00, 0x00, // mov rsi,ptr
        0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0xB0, 0x47, 0x02, 0x12, 0xFE, 0x7F, 0x00, 0x00, // call ptr
        0x48, 0x83, 0xC4, 0x20, // add rsp,50 { 80 }

        0xF3, 0x44, 0x0F, 0x6F, 0xBC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0xB4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0xAC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0xA4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0x9C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0x94, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0x8C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x44, 0x0F, 0x6F, 0x84, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0xBC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0xB4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0xAC, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0xA4, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0x9C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0x94, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0x8C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10, 0xF3, 0x0F, 0x6F, 0x84, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x10,

        0x41, 0x5F, // pop r15
        0x41, 0x5E, // pop r14
        0x41, 0x5D, // pop r13
        0x41, 0x5C, // pop r12
        0x41, 0x5B, // pop r11
        0x41, 0x5A, // pop r10
        0x41, 0x59, // pop r9
        0x41, 0x58, // pop r8
        0x5D, // pop rbp
        0x5F, // pop rdi
        0x5E, // pop rsi
        0x5A, // pop rdx
        0x59, // pop rcx
        0x5B, // pop rbx
        0x5C, // pop rsp

        0x48, 0x85, 0xC0,
        0x75, 0x0E,
        0xFF, 0x25, 0x00, 0x00, 0x00, 0x00, 0x30, 0xF8, 0xB1, 0x81, 0xFA, 0x7F, 0x00, 0x00,

        0x48, 0x89, 0x40, 0x08, // mov [rax+08],rax
        0x48, 0x89, 0x58, 0x10, // mov [rax+10],rbx
        0x48, 0x89, 0x48, 0x18, // mov [rax+18],rcx
        0x48, 0x89, 0x50, 0x20, // mov [rax+20],rdx
        0x48, 0x89, 0x70, 0x28, // mov [rax+28],rsi
        0x48, 0x89, 0x78, 0x30, // mov [rax+30],rdi
        0x48, 0x89, 0x68, 0x38, // mov [rax+38],rbp
        0x48, 0x89, 0x60, 0x40, // mov [rax+40],rsp
        0x4C, 0x89, 0x40, 0x48, // mov [rax+48],r8
        0x4C, 0x89, 0x48, 0x50, // mov [rax+50],r9
        0x4C, 0x89, 0x50, 0x58, // mov [rax+58],r10
        0x4C, 0x89, 0x58, 0x60, // mov [rax+60],r11
        0x4C, 0x89, 0x60, 0x68, // mov [rax+68],r12
        0x4C, 0x89, 0x68, 0x70, // mov [rax+70],r13
        0x4C, 0x89, 0x70, 0x78, // mov [rax+78],r14
        0x4C, 0x89, 0xB8, 0x80, 0x00, 0x00, 0x00, // mov [rax+00000080],r15

        0xF3, 0x0F, 0x7F, 0x80, 0x88, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0x88, 0x98, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0x90, 0xA8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0x98, 0xB8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0xA0, 0xC8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0xA8, 0xD8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0xB0, 0xE8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x7F, 0xB8, 0xF8, 0x00, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0x80, 0x08, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0x88, 0x18, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0x90, 0x28, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0x98, 0x38, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0xA0, 0x48, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0xA8, 0x58, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0xB0, 0x68, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x7F, 0xB8, 0x78, 0x01, 0x00, 0x00,

        0x51, // push rcx
        0x57, // push rdi
        0x48, 0x8B, 0x44, 0x24, 0x38,
        0x48, 0x89, 0x44, 0x24, 0xE8,
        0x48, 0x8B, 0x44, 0x24, 0x40,
        0x48, 0x89, 0x44, 0x24, 0xF0,
        0x48, 0x8B, 0x44, 0x24, 0x48,
        0x48, 0x89, 0x44, 0x24, 0xF8,
        0x48, 0x8B, 0x44, 0x24, 0x18,
        0x48, 0x89, 0x44, 0x24, 0xC8,
        0x48, 0x8B, 0x44, 0x24, 0x20,
        0x48, 0x89, 0x44, 0x24, 0xD0,
        0x48, 0x83, 0xEC, 0x38,
        0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0x80, 0x56, 0xDA, 0x1F, 0xFE, 0x7F, 0x00, 0x00, // call ptr
        0x48, 0x83, 0xC4, 0x38, // add rsp,08 { 8 }
        0x5F, // pop rdi
        0x59, // pop rcx
        0x50, // push rax
        0x48, 0x83, 0xEC, 0x20, // sub rsp,50 { 80 }
        0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0x80, 0x56, 0xDA, 0x1F, 0xFE, 0x7F, 0x00, 0x00, // call ptr
        0x48, 0x83, 0xC4, 0x20, // add rsp,50 { 80 }
        0x58, // pop rax
        0xC3, // ret
        0x48, 0x8B, 0x40, 0x08, // mov rax,[rax+08]
        0x48, 0x8B, 0x58, 0x10, // mov rbx,[rax+10]
        0x48, 0x8B, 0x48, 0x18, // mov rcx,[rax+18]
        0x48, 0x8B, 0x50, 0x20, // mov rdx,[rax+20]
        0x48, 0x8B, 0x70, 0x28, // mov rsi,[rax+28]
        0x48, 0x8B, 0x78, 0x30, // mov rdi,[rax+30]
        0x48, 0x8B, 0x68, 0x38, // mov rbp,[rax+38]
        0x48, 0x8B, 0x60, 0x40, // mov rsp,[rax+40]
        0x4C, 0x8B, 0x40, 0x48, // mov r8,[rax+48]
        0x4C, 0x8B, 0x48, 0x50, // mov r9,[rax+50]
        0x4C, 0x8B, 0x50, 0x58, // mov r10,[rax+58]
        0x4C, 0x8B, 0x58, 0x60, // mov r11,[rax+60]
        0x4C, 0x8B, 0x60, 0x68, // mov r12,[rax+68]
        0x4C, 0x8B, 0x68, 0x70, // mov r13,[rax+70]
        0x4C, 0x8B, 0x70, 0x78, // mov r14,[rax+78]
        0x4C, 0x8B, 0xB8, 0x80, 0x00, 0x00, 0x00, // mov r15,[rax+00000080]

        0xF3, 0x0F, 0x6F, 0x80, 0x88, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0x88, 0x98, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0x90, 0xA8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0x98, 0xB8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0xA0, 0xC8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0xA8, 0xD8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0xB0, 0xE8, 0x00, 0x00, 0x00, 0xF3, 0x0F, 0x6F, 0xB8, 0xF8, 0x00, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0x80, 0x08, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0x88, 0x18, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0x90, 0x28, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0x98, 0x38, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0xA0, 0x48, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0xA8, 0x58, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0xB0, 0x68, 0x01, 0x00, 0x00, 0xF3, 0x44, 0x0F, 0x6F, 0xB8, 0x78, 0x01, 0x00, 0x00,

        0xFF, 0x25, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x47, 0xE3, 0x2D, 0xFE, 0x7F, 0x00, 0x00 // jmp ptr
    };
}
